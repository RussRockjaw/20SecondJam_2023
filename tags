!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BinaryStep	.\Assets\Scripts\Math.cs	/^        public static double BinaryStep(double v)$/;"	m	class:KE.Math
BuildPlayArea	.\Assets\Scripts\PlayArea.cs	/^    public void BuildPlayArea(int gridWidth, int gridHeight)$/;"	m	class:PlayArea
Cart2Index	.\Assets\Scripts\Grid2D.cs	/^    public int Cart2Index(Vector2 pos)$/;"	m	class:Grid2D
Cart2Index	.\Assets\Scripts\Grid2D.cs	/^    public int Cart2Index(int x, int y)$/;"	m	class:Grid2D
Cart2Index	.\Assets\Scripts\Grid2D.cs	/^    static public int Cart2Index(int x, int y, int cols)$/;"	m	class:Grid2D
Cart2Index	.\Assets\Scripts\PlayArea.cs	/^    public int Cart2Index(Vector2 p)$/;"	m	class:PlayArea
Cart2World	.\Assets\Scripts\Grid2D.cs	/^    public Vector3 Cart2World(Vector2 gridPos)$/;"	m	class:Grid2D
Cart2World	.\Assets\Scripts\Grid2D.cs	/^    public Vector3 Cart2World(int x, int y)$/;"	m	class:Grid2D
CellScale	.\Assets\Scripts\Grid2D.cs	/^    public Vector2 CellScale { get { return cellScale; } private set {} }$/;"	p	class:Grid2D
ColorTheCells	.\Assets\Scripts\PlayArea.cs	/^    public void ColorTheCells(Vector2[] pos, Color c)$/;"	m	class:PlayArea
Cols	.\Assets\Scripts\Grid2D.cs	/^    public int Cols { get { return cols; } private set {} }$/;"	p	class:Grid2D
Contains	.\Assets\Scripts\Grid2D.cs	/^    public bool Contains(Vector2 gridpos)$/;"	m	class:Grid2D
Contains	.\Assets\Scripts\Grid2D.cs	/^    public bool Contains(Vector3 pos)$/;"	m	class:Grid2D
Contains	.\Assets\Scripts\Grid2D.cs	/^    public bool Contains(int index)$/;"	m	class:Grid2D
Contains	.\Assets\Scripts\Grid2D.cs	/^    public bool Contains(int x, int y)$/;"	m	class:Grid2D
GameController	.\Assets\Scripts\GameController.cs	/^public class GameController : MonoBehaviour$/;"	c
GenerateGamePieceData	.\Assets\Scripts\GameController.cs	/^    public Vector2[][] GenerateGamePieceData(int maxPieceSize)$/;"	m	class:GameController
GetGrid	.\Assets\Scripts\PlayArea.cs	/^    public Grid2D GetGrid()$/;"	m	class:PlayArea
GetPositionAroundCirlce	.\Assets\Scripts\Math.cs	/^        public static Vector2 GetPositionAroundCirlce(float angle, float radius)$/;"	m	class:KE.Math
Grid2D	.\Assets\Scripts\Grid2D.cs	/^    public Grid2D(int cols, int rows, Vector2 cellScale, Vector2 offsetFromZero, bool zFlag = false)$/;"	m	class:Grid2D
Grid2D	.\Assets\Scripts\Grid2D.cs	/^    public Grid2D(int cols, int rows, bool zFlag = false)$/;"	m	class:Grid2D
Grid2D	.\Assets\Scripts\Grid2D.cs	/^public class Grid2D$/;"	c
Index2Cart	.\Assets\Scripts\Grid2D.cs	/^    public Vector2 Index2Cart(int index)$/;"	m	class:Grid2D
Index2Cart	.\Assets\Scripts\PlayArea.cs	/^    public Vector2 Index2Cart(int n)$/;"	m	class:PlayArea
Index2World	.\Assets\Scripts\Grid2D.cs	/^    public Vector3 Index2World(int index)$/;"	m	class:Grid2D
InverseSmoothStep	.\Assets\Scripts\Math.cs	/^        public static float InverseSmoothStep(float ratio)$/;"	m	class:KE.Math
KE	.\Assets\Scripts\Math.cs	/^namespace KE $/;"	n
LeakyRelu	.\Assets\Scripts\Math.cs	/^        public static double LeakyRelu(double v)$/;"	m	class:KE.Math
Math	.\Assets\Scripts\Math.cs	/^    public static class Math $/;"	c	namespace:KE
PlayArea	.\Assets\Scripts\PlayArea.cs	/^public class PlayArea : MonoBehaviour$/;"	c
RandomWalk	.\Assets\Scripts\GameController.cs	/^    private Vector2[] RandomWalk(int start, int steps, bool[] cellsClaimed)$/;"	m	class:GameController	file:
Relu	.\Assets\Scripts\Math.cs	/^        public static double Relu(double v)$/;"	m	class:KE.Math
Rows	.\Assets\Scripts\Grid2D.cs	/^    public int Rows { get { return rows; } private set {} }$/;"	p	class:Grid2D
Sigmoid	.\Assets\Scripts\Math.cs	/^        public static double Sigmoid(double v)$/;"	m	class:KE.Math
SineWave	.\Assets\Scripts\Math.cs	/^        public static float SineWave(float theta, float amplitude, float baseline)$/;"	m	class:KE.Math
Sinusoid	.\Assets\Scripts\Math.cs	/^        public static double Sinusoid(double v)$/;"	m	class:KE.Math
Size	.\Assets\Scripts\Grid2D.cs	/^    public int Size { get { return cols * rows; } private set {} }$/;"	p	class:Grid2D
Size	.\Assets\Scripts\PlayArea.cs	/^    public int Size()$/;"	m	class:PlayArea
SmootherStep	.\Assets\Scripts\Math.cs	/^        public static float SmootherStep(float ratio)$/;"	m	class:KE.Math
SoftSign	.\Assets\Scripts\Math.cs	/^        public static double SoftSign(double v)$/;"	m	class:KE.Math
SpawnGamePieces	.\Assets\Scripts\GameController.cs	/^    public void SpawnGamePieces(Vector2[][] data)$/;"	m	class:GameController
SplitCells	.\Assets\Scripts\GameController.cs	/^    private int[] SplitCells(int n, int max)$/;"	m	class:GameController	file:
Start	.\Assets\Scripts\GameController.cs	/^    void Start()$/;"	m	class:GameController	file:
Start	.\Assets\Scripts\PlayArea.cs	/^    void Start()$/;"	m	class:PlayArea	file:
TanH	.\Assets\Scripts\Math.cs	/^        public static double TanH(double v)$/;"	m	class:KE.Math
Update	.\Assets\Scripts\PlayArea.cs	/^    void Update()$/;"	m	class:PlayArea	file:
World2Cart	.\Assets\Scripts\Grid2D.cs	/^    public Vector2 World2Cart(Vector3 worldPos)$/;"	m	class:Grid2D
World2Index	.\Assets\Scripts\Grid2D.cs	/^    public int World2Index(Vector3 pos)$/;"	m	class:Grid2D
cellScale	.\Assets\Scripts\Grid2D.cs	/^    private Vector2 cellScale;$/;"	f	class:Grid2D	file:
cells	.\Assets\Scripts\PlayArea.cs	/^    private GameObject[] cells;$/;"	f	class:PlayArea	file:
cols	.\Assets\Scripts\Grid2D.cs	/^    private int cols;$/;"	f	class:Grid2D	file:
directions	.\Assets\Scripts\GameController.cs	/^    private Vector2[] directions = new Vector2[] $/;"	f	class:GameController	file:
gamePieceColors	.\Assets\Scripts\GameController.cs	/^    public List<Color> gamePieceColors = new List<Color>() $/;"	f	class:GameController
gamePieceData	.\Assets\Scripts\GameController.cs	/^    private Vector2[][] gamePieceData;$/;"	f	class:GameController	file:
grid	.\Assets\Scripts\PlayArea.cs	/^    private Grid2D grid;$/;"	f	class:PlayArea	file:
offsetFromZero	.\Assets\Scripts\Grid2D.cs	/^    private Vector2 offsetFromZero; $/;"	f	class:Grid2D	file:
playArea	.\Assets\Scripts\GameController.cs	/^    public PlayArea playArea;$/;"	f	class:GameController
prefabCell	.\Assets\Scripts\PlayArea.cs	/^    public GameObject prefabCell;$/;"	f	class:PlayArea
prefabGamePiece	.\Assets\Scripts\GameController.cs	/^    public GameObject prefabGamePiece;$/;"	f	class:GameController
rows	.\Assets\Scripts\Grid2D.cs	/^    private int rows;$/;"	f	class:Grid2D	file:
shapes	.\Assets\Scripts\GameController.cs	/^    private List<Shape> shapes;$/;"	f	class:GameController	file:
useZ	.\Assets\Scripts\Grid2D.cs	/^    private bool useZ = false;$/;"	f	class:Grid2D	file:
